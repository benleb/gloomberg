// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: seawa/seawa.proto

package seawa

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventType int32

const (
	EventType_UNKNOWN           EventType = 0
	EventType_ITEM_LISTED       EventType = 1
	EventType_ITEM_RECEIVED_BID EventType = 2
	EventType_METADATA_UPDATED  EventType = 3
	EventType_COLLECTION_OFFER  EventType = 4
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "UNKNOWN",
		1: "ITEM_LISTED",
		2: "ITEM_RECEIVED_BID",
		3: "METADATA_UPDATED",
		4: "COLLECTION_OFFER",
	}
	EventType_value = map[string]int32{
		"UNKNOWN":           0,
		"ITEM_LISTED":       1,
		"ITEM_RECEIVED_BID": 2,
		"METADATA_UPDATED":  3,
		"COLLECTION_OFFER":  4,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_seawa_seawa_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_seawa_seawa_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_seawa_seawa_proto_rawDescGZIP(), []int{0}
}

type SubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventTypes  []EventType `protobuf:"varint,1,rep,packed,name=eventTypes,proto3,enum=seawatcher.EventType" json:"eventTypes,omitempty"`
	Collections []string    `protobuf:"bytes,2,rep,name=collections,proto3" json:"collections,omitempty"`
}

func (x *SubscriptionRequest) Reset() {
	*x = SubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seawa_seawa_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionRequest) ProtoMessage() {}

func (x *SubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_seawa_seawa_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionRequest.ProtoReflect.Descriptor instead.
func (*SubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_seawa_seawa_proto_rawDescGZIP(), []int{0}
}

func (x *SubscriptionRequest) GetEventTypes() []EventType {
	if x != nil {
		return x.EventTypes
	}
	return nil
}

func (x *SubscriptionRequest) GetCollections() []string {
	if x != nil {
		return x.Collections
	}
	return nil
}

// A feature names something at a given point.
//
// If a feature could not be named, the name is empty.
type OpenSeaEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the feature.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The event type.
	EventType EventType `protobuf:"varint,2,opt,name=eventType,proto3,enum=seawatcher.EventType" json:"eventType,omitempty"`
}

func (x *OpenSeaEvent) Reset() {
	*x = OpenSeaEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seawa_seawa_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenSeaEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSeaEvent) ProtoMessage() {}

func (x *OpenSeaEvent) ProtoReflect() protoreflect.Message {
	mi := &file_seawa_seawa_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenSeaEvent.ProtoReflect.Descriptor instead.
func (*OpenSeaEvent) Descriptor() ([]byte, []int) {
	return file_seawa_seawa_proto_rawDescGZIP(), []int{1}
}

func (x *OpenSeaEvent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OpenSeaEvent) GetEventType() EventType {
	if x != nil {
		return x.EventType
	}
	return EventType_UNKNOWN
}

// Event emitted when an item is listed for sale.
//
// This event is emitted when an item is listed for sale on opensea.
// It contains information about the item, such as its ID and metadata, as well
// as information about the seller and the payment token used for the sale.
type ItemListed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventType EventType                     `protobuf:"varint,1,opt,name=event_type,json=eventType,proto3,enum=seawatcher.EventType" json:"event_type,omitempty"`
	Payload   *ItemListed_ItemListedPayload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	SentAt    *timestamppb.Timestamp        `protobuf:"bytes,3,opt,name=sent_at,json=sentAt,proto3" json:"sent_at,omitempty"`
}

func (x *ItemListed) Reset() {
	*x = ItemListed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seawa_seawa_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemListed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemListed) ProtoMessage() {}

func (x *ItemListed) ProtoReflect() protoreflect.Message {
	mi := &file_seawa_seawa_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemListed.ProtoReflect.Descriptor instead.
func (*ItemListed) Descriptor() ([]byte, []int) {
	return file_seawa_seawa_proto_rawDescGZIP(), []int{2}
}

func (x *ItemListed) GetEventType() EventType {
	if x != nil {
		return x.EventType
	}
	return EventType_UNKNOWN
}

func (x *ItemListed) GetPayload() *ItemListed_ItemListedPayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ItemListed) GetSentAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SentAt
	}
	return nil
}

type ItemListed_Collection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slug string `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
}

func (x *ItemListed_Collection) Reset() {
	*x = ItemListed_Collection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seawa_seawa_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemListed_Collection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemListed_Collection) ProtoMessage() {}

func (x *ItemListed_Collection) ProtoReflect() protoreflect.Message {
	mi := &file_seawa_seawa_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemListed_Collection.ProtoReflect.Descriptor instead.
func (*ItemListed_Collection) Descriptor() ([]byte, []int) {
	return file_seawa_seawa_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ItemListed_Collection) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

type ItemListed_Chain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ItemListed_Chain) Reset() {
	*x = ItemListed_Chain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seawa_seawa_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemListed_Chain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemListed_Chain) ProtoMessage() {}

func (x *ItemListed_Chain) ProtoReflect() protoreflect.Message {
	mi := &file_seawa_seawa_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemListed_Chain.ProtoReflect.Descriptor instead.
func (*ItemListed_Chain) Descriptor() ([]byte, []int) {
	return file_seawa_seawa_proto_rawDescGZIP(), []int{2, 1}
}

func (x *ItemListed_Chain) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ItemListed_Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimationUrl string `protobuf:"bytes,1,opt,name=animation_url,json=animationUrl,proto3" json:"animation_url,omitempty"`
	ImageUrl     string `protobuf:"bytes,2,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	MetadataUrl  string `protobuf:"bytes,3,opt,name=metadata_url,json=metadataUrl,proto3" json:"metadata_url,omitempty"`
	Name         string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ItemListed_Metadata) Reset() {
	*x = ItemListed_Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seawa_seawa_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemListed_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemListed_Metadata) ProtoMessage() {}

func (x *ItemListed_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_seawa_seawa_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemListed_Metadata.ProtoReflect.Descriptor instead.
func (*ItemListed_Metadata) Descriptor() ([]byte, []int) {
	return file_seawa_seawa_proto_rawDescGZIP(), []int{2, 2}
}

func (x *ItemListed_Metadata) GetAnimationUrl() string {
	if x != nil {
		return x.AnimationUrl
	}
	return ""
}

func (x *ItemListed_Metadata) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *ItemListed_Metadata) GetMetadataUrl() string {
	if x != nil {
		return x.MetadataUrl
	}
	return ""
}

func (x *ItemListed_Metadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ItemListed_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain     *ItemListed_Chain    `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`
	Metadata  *ItemListed_Metadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	NftId     string               `protobuf:"bytes,3,opt,name=nft_id,json=nftId,proto3" json:"nft_id,omitempty"`
	Permalink string               `protobuf:"bytes,4,opt,name=permalink,proto3" json:"permalink,omitempty"`
}

func (x *ItemListed_Item) Reset() {
	*x = ItemListed_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seawa_seawa_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemListed_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemListed_Item) ProtoMessage() {}

func (x *ItemListed_Item) ProtoReflect() protoreflect.Message {
	mi := &file_seawa_seawa_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemListed_Item.ProtoReflect.Descriptor instead.
func (*ItemListed_Item) Descriptor() ([]byte, []int) {
	return file_seawa_seawa_proto_rawDescGZIP(), []int{2, 3}
}

func (x *ItemListed_Item) GetChain() *ItemListed_Chain {
	if x != nil {
		return x.Chain
	}
	return nil
}

func (x *ItemListed_Item) GetMetadata() *ItemListed_Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ItemListed_Item) GetNftId() string {
	if x != nil {
		return x.NftId
	}
	return ""
}

func (x *ItemListed_Item) GetPermalink() string {
	if x != nil {
		return x.Permalink
	}
	return ""
}

type ItemListed_Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *ItemListed_Account) Reset() {
	*x = ItemListed_Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seawa_seawa_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemListed_Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemListed_Account) ProtoMessage() {}

func (x *ItemListed_Account) ProtoReflect() protoreflect.Message {
	mi := &file_seawa_seawa_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemListed_Account.ProtoReflect.Descriptor instead.
func (*ItemListed_Account) Descriptor() ([]byte, []int) {
	return file_seawa_seawa_proto_rawDescGZIP(), []int{2, 4}
}

func (x *ItemListed_Account) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type ItemListed_PaymentToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address  string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Decimals uint32 `protobuf:"varint,2,opt,name=decimals,proto3" json:"decimals,omitempty"`
	EthPrice string `protobuf:"bytes,3,opt,name=eth_price,json=ethPrice,proto3" json:"eth_price,omitempty"`
	Name     string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Symbol   string `protobuf:"bytes,5,opt,name=symbol,proto3" json:"symbol,omitempty"`
	UsdPrice string `protobuf:"bytes,6,opt,name=usd_price,json=usdPrice,proto3" json:"usd_price,omitempty"`
}

func (x *ItemListed_PaymentToken) Reset() {
	*x = ItemListed_PaymentToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seawa_seawa_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemListed_PaymentToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemListed_PaymentToken) ProtoMessage() {}

func (x *ItemListed_PaymentToken) ProtoReflect() protoreflect.Message {
	mi := &file_seawa_seawa_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemListed_PaymentToken.ProtoReflect.Descriptor instead.
func (*ItemListed_PaymentToken) Descriptor() ([]byte, []int) {
	return file_seawa_seawa_proto_rawDescGZIP(), []int{2, 5}
}

func (x *ItemListed_PaymentToken) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ItemListed_PaymentToken) GetDecimals() uint32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *ItemListed_PaymentToken) GetEthPrice() string {
	if x != nil {
		return x.EthPrice
	}
	return ""
}

func (x *ItemListed_PaymentToken) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ItemListed_PaymentToken) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *ItemListed_PaymentToken) GetUsdPrice() string {
	if x != nil {
		return x.UsdPrice
	}
	return ""
}

type ItemListed_Consideration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndAmount            uint64 `protobuf:"varint,1,opt,name=endAmount,proto3" json:"endAmount,omitempty"`
	IdentifierOrCriteria uint32 `protobuf:"varint,2,opt,name=identifierOrCriteria,proto3" json:"identifierOrCriteria,omitempty"`
	ItemType             uint32 `protobuf:"varint,3,opt,name=itemType,proto3" json:"itemType,omitempty"`
	Recipient            string `protobuf:"bytes,4,opt,name=recipient,proto3" json:"recipient,omitempty"`
	StartAmount          uint64 `protobuf:"varint,5,opt,name=startAmount,proto3" json:"startAmount,omitempty"`
	Token                string `protobuf:"bytes,6,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ItemListed_Consideration) Reset() {
	*x = ItemListed_Consideration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seawa_seawa_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemListed_Consideration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemListed_Consideration) ProtoMessage() {}

func (x *ItemListed_Consideration) ProtoReflect() protoreflect.Message {
	mi := &file_seawa_seawa_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemListed_Consideration.ProtoReflect.Descriptor instead.
func (*ItemListed_Consideration) Descriptor() ([]byte, []int) {
	return file_seawa_seawa_proto_rawDescGZIP(), []int{2, 6}
}

func (x *ItemListed_Consideration) GetEndAmount() uint64 {
	if x != nil {
		return x.EndAmount
	}
	return 0
}

func (x *ItemListed_Consideration) GetIdentifierOrCriteria() uint32 {
	if x != nil {
		return x.IdentifierOrCriteria
	}
	return 0
}

func (x *ItemListed_Consideration) GetItemType() uint32 {
	if x != nil {
		return x.ItemType
	}
	return 0
}

func (x *ItemListed_Consideration) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

func (x *ItemListed_Consideration) GetStartAmount() uint64 {
	if x != nil {
		return x.StartAmount
	}
	return 0
}

func (x *ItemListed_Consideration) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ItemListed_Offer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndAmount            uint32 `protobuf:"varint,1,opt,name=endAmount,proto3" json:"endAmount,omitempty"`
	IdentifierOrCriteria uint64 `protobuf:"varint,2,opt,name=identifierOrCriteria,proto3" json:"identifierOrCriteria,omitempty"`
	ItemType             uint32 `protobuf:"varint,3,opt,name=itemType,proto3" json:"itemType,omitempty"`
	StartAmount          uint32 `protobuf:"varint,4,opt,name=startAmount,proto3" json:"startAmount,omitempty"`
	Token                string `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ItemListed_Offer) Reset() {
	*x = ItemListed_Offer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seawa_seawa_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemListed_Offer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemListed_Offer) ProtoMessage() {}

func (x *ItemListed_Offer) ProtoReflect() protoreflect.Message {
	mi := &file_seawa_seawa_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemListed_Offer.ProtoReflect.Descriptor instead.
func (*ItemListed_Offer) Descriptor() ([]byte, []int) {
	return file_seawa_seawa_proto_rawDescGZIP(), []int{2, 7}
}

func (x *ItemListed_Offer) GetEndAmount() uint32 {
	if x != nil {
		return x.EndAmount
	}
	return 0
}

func (x *ItemListed_Offer) GetIdentifierOrCriteria() uint64 {
	if x != nil {
		return x.IdentifierOrCriteria
	}
	return 0
}

func (x *ItemListed_Offer) GetItemType() uint32 {
	if x != nil {
		return x.ItemType
	}
	return 0
}

func (x *ItemListed_Offer) GetStartAmount() uint32 {
	if x != nil {
		return x.StartAmount
	}
	return 0
}

func (x *ItemListed_Offer) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ItemListed_Parameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConduitKey                      string                      `protobuf:"bytes,1,opt,name=conduitKey,proto3" json:"conduitKey,omitempty"`
	Consideration                   []*ItemListed_Consideration `protobuf:"bytes,2,rep,name=consideration,proto3" json:"consideration,omitempty"`
	Counter                         uint32                      `protobuf:"varint,3,opt,name=counter,proto3" json:"counter,omitempty"`
	EndTime                         uint32                      `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Offer                           []*ItemListed_Offer         `protobuf:"bytes,5,rep,name=offer,proto3" json:"offer,omitempty"`
	Offerer                         string                      `protobuf:"bytes,6,opt,name=offerer,proto3" json:"offerer,omitempty"`
	OrderType                       uint32                      `protobuf:"varint,7,opt,name=orderType,proto3" json:"orderType,omitempty"`
	Salt                            uint64                      `protobuf:"varint,8,opt,name=salt,proto3" json:"salt,omitempty"`
	StartTime                       uint32                      `protobuf:"varint,9,opt,name=startTime,proto3" json:"startTime,omitempty"`
	TotalOriginalConsiderationItems uint32                      `protobuf:"varint,10,opt,name=totalOriginalConsiderationItems,proto3" json:"totalOriginalConsiderationItems,omitempty"`
	Zone                            string                      `protobuf:"bytes,11,opt,name=zone,proto3" json:"zone,omitempty"`
	ZoneHash                        string                      `protobuf:"bytes,12,opt,name=zoneHash,proto3" json:"zoneHash,omitempty"`
}

func (x *ItemListed_Parameters) Reset() {
	*x = ItemListed_Parameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seawa_seawa_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemListed_Parameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemListed_Parameters) ProtoMessage() {}

func (x *ItemListed_Parameters) ProtoReflect() protoreflect.Message {
	mi := &file_seawa_seawa_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemListed_Parameters.ProtoReflect.Descriptor instead.
func (*ItemListed_Parameters) Descriptor() ([]byte, []int) {
	return file_seawa_seawa_proto_rawDescGZIP(), []int{2, 8}
}

func (x *ItemListed_Parameters) GetConduitKey() string {
	if x != nil {
		return x.ConduitKey
	}
	return ""
}

func (x *ItemListed_Parameters) GetConsideration() []*ItemListed_Consideration {
	if x != nil {
		return x.Consideration
	}
	return nil
}

func (x *ItemListed_Parameters) GetCounter() uint32 {
	if x != nil {
		return x.Counter
	}
	return 0
}

func (x *ItemListed_Parameters) GetEndTime() uint32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ItemListed_Parameters) GetOffer() []*ItemListed_Offer {
	if x != nil {
		return x.Offer
	}
	return nil
}

func (x *ItemListed_Parameters) GetOfferer() string {
	if x != nil {
		return x.Offerer
	}
	return ""
}

func (x *ItemListed_Parameters) GetOrderType() uint32 {
	if x != nil {
		return x.OrderType
	}
	return 0
}

func (x *ItemListed_Parameters) GetSalt() uint64 {
	if x != nil {
		return x.Salt
	}
	return 0
}

func (x *ItemListed_Parameters) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ItemListed_Parameters) GetTotalOriginalConsiderationItems() uint32 {
	if x != nil {
		return x.TotalOriginalConsiderationItems
	}
	return 0
}

func (x *ItemListed_Parameters) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *ItemListed_Parameters) GetZoneHash() string {
	if x != nil {
		return x.ZoneHash
	}
	return ""
}

type ItemListed_ProtocolData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parameters                            *ItemListed_Parameters `protobuf:"bytes,1,opt,name=parameters,proto3" json:"parameters,omitempty"`
	Signature                             string                 `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	UseLazyMintAdapterForSharedStorefront bool                   `protobuf:"varint,3,opt,name=use_lazy_mint_adapter_for_shared_storefront,json=useLazyMintAdapterForSharedStorefront,proto3" json:"use_lazy_mint_adapter_for_shared_storefront,omitempty"`
}

func (x *ItemListed_ProtocolData) Reset() {
	*x = ItemListed_ProtocolData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seawa_seawa_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemListed_ProtocolData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemListed_ProtocolData) ProtoMessage() {}

func (x *ItemListed_ProtocolData) ProtoReflect() protoreflect.Message {
	mi := &file_seawa_seawa_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemListed_ProtocolData.ProtoReflect.Descriptor instead.
func (*ItemListed_ProtocolData) Descriptor() ([]byte, []int) {
	return file_seawa_seawa_proto_rawDescGZIP(), []int{2, 9}
}

func (x *ItemListed_ProtocolData) GetParameters() *ItemListed_Parameters {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *ItemListed_ProtocolData) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *ItemListed_ProtocolData) GetUseLazyMintAdapterForSharedStorefront() bool {
	if x != nil {
		return x.UseLazyMintAdapterForSharedStorefront
	}
	return false
}

type ItemListed_ItemListedPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasePrice      string                   `protobuf:"bytes,1,opt,name=base_price,json=basePrice,proto3" json:"base_price,omitempty"`
	Collection     *ItemListed_Collection   `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	EventTimestamp *timestamppb.Timestamp   `protobuf:"bytes,3,opt,name=event_timestamp,json=eventTimestamp,proto3" json:"event_timestamp,omitempty"`
	ExpirationDate *timestamppb.Timestamp   `protobuf:"bytes,4,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`
	IsPrivate      bool                     `protobuf:"varint,5,opt,name=is_private,json=isPrivate,proto3" json:"is_private,omitempty"`
	Item           *ItemListed_Item         `protobuf:"bytes,6,opt,name=item,proto3" json:"item,omitempty"`
	ListingDate    *timestamppb.Timestamp   `protobuf:"bytes,7,opt,name=listing_date,json=listingDate,proto3" json:"listing_date,omitempty"`
	ListingType    *anypb.Any               `protobuf:"bytes,8,opt,name=listing_type,json=listingType,proto3" json:"listing_type,omitempty"`
	Maker          *ItemListed_Account      `protobuf:"bytes,9,opt,name=maker,proto3" json:"maker,omitempty"`
	OrderHash      string                   `protobuf:"bytes,10,opt,name=order_hash,json=orderHash,proto3" json:"order_hash,omitempty"`
	PaymentToken   *ItemListed_PaymentToken `protobuf:"bytes,11,opt,name=payment_token,json=paymentToken,proto3" json:"payment_token,omitempty"`
	ProtocolData   *ItemListed_ProtocolData `protobuf:"bytes,12,opt,name=protocol_data,json=protocolData,proto3" json:"protocol_data,omitempty"`
	Quantity       uint32                   `protobuf:"varint,13,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Taker          *ItemListed_Account      `protobuf:"bytes,14,opt,name=taker,proto3" json:"taker,omitempty"`
}

func (x *ItemListed_ItemListedPayload) Reset() {
	*x = ItemListed_ItemListedPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seawa_seawa_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemListed_ItemListedPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemListed_ItemListedPayload) ProtoMessage() {}

func (x *ItemListed_ItemListedPayload) ProtoReflect() protoreflect.Message {
	mi := &file_seawa_seawa_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemListed_ItemListedPayload.ProtoReflect.Descriptor instead.
func (*ItemListed_ItemListedPayload) Descriptor() ([]byte, []int) {
	return file_seawa_seawa_proto_rawDescGZIP(), []int{2, 10}
}

func (x *ItemListed_ItemListedPayload) GetBasePrice() string {
	if x != nil {
		return x.BasePrice
	}
	return ""
}

func (x *ItemListed_ItemListedPayload) GetCollection() *ItemListed_Collection {
	if x != nil {
		return x.Collection
	}
	return nil
}

func (x *ItemListed_ItemListedPayload) GetEventTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.EventTimestamp
	}
	return nil
}

func (x *ItemListed_ItemListedPayload) GetExpirationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpirationDate
	}
	return nil
}

func (x *ItemListed_ItemListedPayload) GetIsPrivate() bool {
	if x != nil {
		return x.IsPrivate
	}
	return false
}

func (x *ItemListed_ItemListedPayload) GetItem() *ItemListed_Item {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *ItemListed_ItemListedPayload) GetListingDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ListingDate
	}
	return nil
}

func (x *ItemListed_ItemListedPayload) GetListingType() *anypb.Any {
	if x != nil {
		return x.ListingType
	}
	return nil
}

func (x *ItemListed_ItemListedPayload) GetMaker() *ItemListed_Account {
	if x != nil {
		return x.Maker
	}
	return nil
}

func (x *ItemListed_ItemListedPayload) GetOrderHash() string {
	if x != nil {
		return x.OrderHash
	}
	return ""
}

func (x *ItemListed_ItemListedPayload) GetPaymentToken() *ItemListed_PaymentToken {
	if x != nil {
		return x.PaymentToken
	}
	return nil
}

func (x *ItemListed_ItemListedPayload) GetProtocolData() *ItemListed_ProtocolData {
	if x != nil {
		return x.ProtocolData
	}
	return nil
}

func (x *ItemListed_ItemListedPayload) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *ItemListed_ItemListedPayload) GetTaker() *ItemListed_Account {
	if x != nil {
		return x.Taker
	}
	return nil
}

var File_seawa_seawa_proto protoreflect.FileDescriptor

var file_seawa_seawa_proto_rawDesc = []byte{
	0x0a, 0x11, 0x73, 0x65, 0x61, 0x77, 0x61, 0x2f, 0x73, 0x65, 0x61, 0x77, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x73, 0x65, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6e, 0x0a, 0x13, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x35, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x61, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x72, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x57, 0x0a, 0x0c, 0x4f,
	0x70, 0x65, 0x6e, 0x53, 0x65, 0x61, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x33, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x22, 0xa5, 0x14, 0x0a, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73,
	0x74, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x61, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x72, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x65, 0x61,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74,
	0x65, 0x64, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x33, 0x0a,
	0x07, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x74,
	0x41, 0x74, 0x1a, 0x20, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x73, 0x6c, 0x75, 0x67, 0x1a, 0x1b, 0x0a, 0x05, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x1a, 0x83, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0xac, 0x01, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x32, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x73, 0x65, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x05, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x12, 0x3b, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x61, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x15, 0x0a, 0x06, 0x6e, 0x66, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6e, 0x66, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x6d,
	0x61, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x65, 0x72,
	0x6d, 0x61, 0x6c, 0x69, 0x6e, 0x6b, 0x1a, 0x23, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0xab, 0x01, 0x0a, 0x0d,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x74, 0x68, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x73, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x1a, 0xd3, 0x01, 0x0a, 0x0d, 0x43, 0x6f,
	0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65,
	0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x65, 0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x4f, 0x72, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x4f, 0x72, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x1a,
	0xad, 0x01, 0x0a, 0x05, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x64,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x6e,
	0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x4f, 0x72, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x4f, 0x72, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69,
	0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x1a,
	0xc4, 0x03, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x69, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x69, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x4a,
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x2e, 0x43, 0x6f,
	0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x6f, 0x6e,
	0x73, 0x69, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x32,
	0x0a, 0x05, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x73, 0x65, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x64, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x66, 0x66,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61,
	0x6c, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x1f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e,
	0x73, 0x69, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x7a, 0x6f,
	0x6e, 0x65, 0x48, 0x61, 0x73, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x7a, 0x6f,
	0x6e, 0x65, 0x48, 0x61, 0x73, 0x68, 0x1a, 0xcc, 0x01, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x41, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73,
	0x65, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x64, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52,
	0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x5a, 0x0a, 0x2b, 0x75, 0x73, 0x65,
	0x5f, 0x6c, 0x61, 0x7a, 0x79, 0x5f, 0x6d, 0x69, 0x6e, 0x74, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x25,
	0x75, 0x73, 0x65, 0x4c, 0x61, 0x7a, 0x79, 0x4d, 0x69, 0x6e, 0x74, 0x41, 0x64, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x46, 0x6f, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x66, 0x72, 0x6f, 0x6e, 0x74, 0x1a, 0x84, 0x06, 0x0a, 0x11, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x62, 0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x73, 0x65, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a,
	0x0f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x43, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x34, 0x0a, 0x05, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x73, 0x65, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05,
	0x6d, 0x61, 0x6b, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x49, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65,
	0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73,
	0x74, 0x65, 0x64, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x49, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x61, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x34, 0x0a, 0x05, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x2a, 0x6c, 0x0a, 0x09,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x4c,
	0x49, 0x53, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x54, 0x45, 0x4d, 0x5f,
	0x52, 0x45, 0x43, 0x45, 0x49, 0x56, 0x45, 0x44, 0x5f, 0x42, 0x49, 0x44, 0x10, 0x02, 0x12, 0x14,
	0x0a, 0x10, 0x4d, 0x45, 0x54, 0x41, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54,
	0x45, 0x44, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x4f, 0x46, 0x46, 0x45, 0x52, 0x10, 0x04, 0x32, 0x60, 0x0a, 0x0a, 0x53, 0x65,
	0x61, 0x57, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x12, 0x52, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x1f, 0x2e, 0x73, 0x65, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x73, 0x65, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x22, 0x00, 0x30, 0x01, 0x42, 0x2c, 0x5a, 0x2a,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x65, 0x6e, 0x6c, 0x65,
	0x62, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x6d, 0x62, 0x65, 0x72, 0x67, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x73, 0x65, 0x61, 0x77, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_seawa_seawa_proto_rawDescOnce sync.Once
	file_seawa_seawa_proto_rawDescData = file_seawa_seawa_proto_rawDesc
)

func file_seawa_seawa_proto_rawDescGZIP() []byte {
	file_seawa_seawa_proto_rawDescOnce.Do(func() {
		file_seawa_seawa_proto_rawDescData = protoimpl.X.CompressGZIP(file_seawa_seawa_proto_rawDescData)
	})
	return file_seawa_seawa_proto_rawDescData
}

var file_seawa_seawa_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_seawa_seawa_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_seawa_seawa_proto_goTypes = []interface{}{
	(EventType)(0),                       // 0: seawatcher.EventType
	(*SubscriptionRequest)(nil),          // 1: seawatcher.SubscriptionRequest
	(*OpenSeaEvent)(nil),                 // 2: seawatcher.OpenSeaEvent
	(*ItemListed)(nil),                   // 3: seawatcher.ItemListed
	(*ItemListed_Collection)(nil),        // 4: seawatcher.ItemListed.Collection
	(*ItemListed_Chain)(nil),             // 5: seawatcher.ItemListed.Chain
	(*ItemListed_Metadata)(nil),          // 6: seawatcher.ItemListed.Metadata
	(*ItemListed_Item)(nil),              // 7: seawatcher.ItemListed.Item
	(*ItemListed_Account)(nil),           // 8: seawatcher.ItemListed.Account
	(*ItemListed_PaymentToken)(nil),      // 9: seawatcher.ItemListed.Payment_token
	(*ItemListed_Consideration)(nil),     // 10: seawatcher.ItemListed.Consideration
	(*ItemListed_Offer)(nil),             // 11: seawatcher.ItemListed.Offer
	(*ItemListed_Parameters)(nil),        // 12: seawatcher.ItemListed.Parameters
	(*ItemListed_ProtocolData)(nil),      // 13: seawatcher.ItemListed.Protocol_data
	(*ItemListed_ItemListedPayload)(nil), // 14: seawatcher.ItemListed.ItemListedPayload
	(*timestamppb.Timestamp)(nil),        // 15: google.protobuf.Timestamp
	(*anypb.Any)(nil),                    // 16: google.protobuf.Any
}
var file_seawa_seawa_proto_depIdxs = []int32{
	0,  // 0: seawatcher.SubscriptionRequest.eventTypes:type_name -> seawatcher.EventType
	0,  // 1: seawatcher.OpenSeaEvent.eventType:type_name -> seawatcher.EventType
	0,  // 2: seawatcher.ItemListed.event_type:type_name -> seawatcher.EventType
	14, // 3: seawatcher.ItemListed.payload:type_name -> seawatcher.ItemListed.ItemListedPayload
	15, // 4: seawatcher.ItemListed.sent_at:type_name -> google.protobuf.Timestamp
	5,  // 5: seawatcher.ItemListed.Item.chain:type_name -> seawatcher.ItemListed.Chain
	6,  // 6: seawatcher.ItemListed.Item.metadata:type_name -> seawatcher.ItemListed.Metadata
	10, // 7: seawatcher.ItemListed.Parameters.consideration:type_name -> seawatcher.ItemListed.Consideration
	11, // 8: seawatcher.ItemListed.Parameters.offer:type_name -> seawatcher.ItemListed.Offer
	12, // 9: seawatcher.ItemListed.Protocol_data.parameters:type_name -> seawatcher.ItemListed.Parameters
	4,  // 10: seawatcher.ItemListed.ItemListedPayload.collection:type_name -> seawatcher.ItemListed.Collection
	15, // 11: seawatcher.ItemListed.ItemListedPayload.event_timestamp:type_name -> google.protobuf.Timestamp
	15, // 12: seawatcher.ItemListed.ItemListedPayload.expiration_date:type_name -> google.protobuf.Timestamp
	7,  // 13: seawatcher.ItemListed.ItemListedPayload.item:type_name -> seawatcher.ItemListed.Item
	15, // 14: seawatcher.ItemListed.ItemListedPayload.listing_date:type_name -> google.protobuf.Timestamp
	16, // 15: seawatcher.ItemListed.ItemListedPayload.listing_type:type_name -> google.protobuf.Any
	8,  // 16: seawatcher.ItemListed.ItemListedPayload.maker:type_name -> seawatcher.ItemListed.Account
	9,  // 17: seawatcher.ItemListed.ItemListedPayload.payment_token:type_name -> seawatcher.ItemListed.Payment_token
	13, // 18: seawatcher.ItemListed.ItemListedPayload.protocol_data:type_name -> seawatcher.ItemListed.Protocol_data
	8,  // 19: seawatcher.ItemListed.ItemListedPayload.taker:type_name -> seawatcher.ItemListed.Account
	1,  // 20: seawatcher.SeaWatcher.GetItemListedEvents:input_type -> seawatcher.SubscriptionRequest
	3,  // 21: seawatcher.SeaWatcher.GetItemListedEvents:output_type -> seawatcher.ItemListed
	21, // [21:22] is the sub-list for method output_type
	20, // [20:21] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_seawa_seawa_proto_init() }
func file_seawa_seawa_proto_init() {
	if File_seawa_seawa_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_seawa_seawa_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seawa_seawa_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenSeaEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seawa_seawa_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemListed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seawa_seawa_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemListed_Collection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seawa_seawa_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemListed_Chain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seawa_seawa_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemListed_Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seawa_seawa_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemListed_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seawa_seawa_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemListed_Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seawa_seawa_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemListed_PaymentToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seawa_seawa_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemListed_Consideration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seawa_seawa_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemListed_Offer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seawa_seawa_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemListed_Parameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seawa_seawa_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemListed_ProtocolData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seawa_seawa_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemListed_ItemListedPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_seawa_seawa_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_seawa_seawa_proto_goTypes,
		DependencyIndexes: file_seawa_seawa_proto_depIdxs,
		EnumInfos:         file_seawa_seawa_proto_enumTypes,
		MessageInfos:      file_seawa_seawa_proto_msgTypes,
	}.Build()
	File_seawa_seawa_proto = out.File
	file_seawa_seawa_proto_rawDesc = nil
	file_seawa_seawa_proto_goTypes = nil
	file_seawa_seawa_proto_depIdxs = nil
}
